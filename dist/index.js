const r=(r="")=>new Promise((t,e)=>{try{t((r=r.toString().replace(/[^\d]/g,"")).replace(/(\d{3})(\d{1,3})(\d{0,3})(\d{0,2})/g,"$1.$2.$3-$4").slice(0,14))}catch(r){e(new Error("Error in function"))}}),t=(r="",t)=>{try{let e=(r=r.toString().replace(/[^\d]/g,"")).replace(/(\d{3})(\d{1,3})(\d{0,3})(\d{0,2})/g,"$1.$2.$3-$4").slice(0,14);return"function"==typeof t&&t(e),e}catch(r){throw new Error("Error in formatCpfSync: "+r)}},e=(r,t)=>{try{let e=r.target.value.toString().replace(/[^\d]/g,"").replace(/(\d{3})(\d{0,3})(\d{0,3})(\d{0,2})/g,function(r,t,e,n,o){let i="";return t&&(i+=t),e&&(i+="."+e),n&&(i+="."+n),o&&(i+="-"+o),i});return r.target.value=e.slice(0,14),"function"==typeof t?t(r):r}catch(r){return"function"==typeof t?t(""):""}},n=(r="")=>r.replace(/[.-]/g,""),o=(r="",t)=>new Promise((e,o)=>{try{let o=r?n(r):"";"function"==typeof t&&t(o),e(o)}catch(r){console.error("Error in clearFormatCpf:",r),o(new Error("Error in function"))}}),i=(r="",t)=>{try{let e=n(r);return"function"==typeof t&&t(e),e}catch(r){throw console.error("Error in clearFormatCpfSync:",r),new Error("Error in clearFormatCpfSync: "+r)}},c=(r="",t)=>new Promise((e,n)=>{try{let n=r.toString(),o=/^\d{3}\.\d{3}\.\d{3}-\d{2}$/.test(n);"function"==typeof t&&t(o),e(o)}catch(r){n(new Error("Error in function"))}}),a=(r="",t)=>{try{let e=r.toString(),n=/^\d{3}\.\d{3}\.\d{3}-\d{2}$/.test(e);return"function"==typeof t?t(n):n}catch(r){throw new Error("Error in isValidCpfSync: "+err)}},s=()=>new Promise((r,t)=>{try{const t=["safari","chrome","edg","opera","msie","firefox"],e=navigator.userAgent.toLowerCase(),n=t.find(r=>e.includes(r));r(n?`${n.charAt(0).toUpperCase()+n.slice(1)} en ${"Linux;"===navigator.userAgent.split(" ")[1].substring(1)?"Android":navigator.userAgent.split(" ")[1].substring(1)}`:void 0)}catch(r){t(new Error("Error in function"))}}),d=()=>{try{const r=["safari","chrome","edg","opera","msie","firefox"],t=navigator.userAgent.toLowerCase(),e=r.find(r=>t.includes(r));return e?`${e.charAt(0).toUpperCase()+e.slice(1)} en ${"Linux;"===navigator.userAgent.split(" ")[1].substring(1)?"Android":navigator.userAgent.split(" ")[1].substring(1)}`:void 0}catch(r){throw new Error("Error in getNavegator: "+r)}};export{o as clearFormatCpf,i as clearFormatCpfSync,r as formatCpf,e as formatCpfChange,t as formatCpfSync,s as getNavegator,d as getNavegatorSync,c as isValidCpf,a as isValidCpfSync};
//# sourceMappingURL=index.js.map

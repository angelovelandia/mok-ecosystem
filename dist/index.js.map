{"version":3,"file":"index.js","sources":["../src/forms/cpf.js","../src/utils.js"],"sourcesContent":["const formatCpf = (cpf = \"\") => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      cpf = cpf.toString().replace(/[^\\d]/g, \"\");\r\n      let newCPF = cpf\r\n        .replace(/(\\d{3})(\\d{1,3})(\\d{0,3})(\\d{0,2})/g, \"$1.$2.$3-$4\")\r\n        .slice(0, 14);\r\n      resolve(newCPF);\r\n    } catch (err) {\r\n      reject(new Error(\"Error in function\"));\r\n    }\r\n  });\r\n};\r\n\r\nconst formatCpfSync = (cpf = \"\", callback) => {\r\n  try {\r\n    cpf = cpf.toString().replace(/[^\\d]/g, \"\");\r\n    let newCPF = cpf\r\n      .replace(/(\\d{3})(\\d{1,3})(\\d{0,3})(\\d{0,2})/g, \"$1.$2.$3-$4\")\r\n      .slice(0, 14);\r\n    if (typeof callback === \"function\") callback(newCPF);\r\n    return newCPF;\r\n  } catch (err) {\r\n    throw new Error(\"Error in formatCpfSync: \" + err);\r\n  }\r\n};\r\n\r\nconst formatCpfChange = (event, callback) => {\r\n  try {\r\n    let cpf = event.target.value.toString().replace(/[^\\d]/g, \"\");\r\n    let newCPF = cpf.replace(\r\n      /(\\d{3})(\\d{0,3})(\\d{0,3})(\\d{0,2})/g,\r\n      function (match, p1, p2, p3, p4) {\r\n        let formattedCPF = \"\";\r\n        if (p1) formattedCPF += p1;\r\n        if (p2) formattedCPF += \".\" + p2;\r\n        if (p3) formattedCPF += \".\" + p3;\r\n        if (p4) formattedCPF += \"-\" + p4;\r\n        return formattedCPF;\r\n      }\r\n    );\r\n    event.target.value = newCPF.slice(0, 14);\r\n    if (typeof callback === \"function\") return callback(event);\r\n    return event;\r\n  } catch (err) {\r\n    if (typeof callback === \"function\") return callback(\"\");\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst clearCpfFormat = (cpf = \"\") => cpf.replace(/[.-]/g, \"\");\r\n\r\nconst clearFormatCpf = (cpf = \"\", callback) => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      let newCPF = cpf ? clearCpfFormat(cpf) : \"\";\r\n      if (typeof callback === \"function\") callback(newCPF);\r\n      resolve(newCPF);\r\n    } catch (err) {\r\n      console.error(\"Error in clearFormatCpf:\", err);\r\n      reject(new Error(\"Error in function\"));\r\n    }\r\n  });\r\n};\r\n\r\nconst clearFormatCpfSync = (cpf = \"\", callback) => {\r\n  try {\r\n    let newCPF = clearCpfFormat(cpf);\r\n    if (typeof callback === \"function\") callback(newCPF);\r\n    return newCPF;\r\n  } catch (err) {\r\n    console.error(\"Error in clearFormatCpfSync:\", err);\r\n    throw new Error(\"Error in clearFormatCpfSync: \" + err);\r\n  }\r\n};\r\n\r\nconst isValidCpf = (cpf = \"\") => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      let data = cpf.toString();\r\n      resolve(/^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$/.test(data));\r\n    } catch (err) {\r\n      reject(new Error(\"Error in function\"));\r\n    }\r\n  });\r\n};\r\n\r\nconst isValidCpfSync = (cpf = \"\", callback) => {\r\n  try {\r\n    let data = cpf.toString();\r\n    let valid = /^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$/.test(data);\r\n    if (typeof callback === \"function\") return callback(valid);\r\n    return valid;\r\n  } catch (error) {\r\n    throw new Error(\"Error in isValidCpfSync: \" + err);\r\n  }\r\n};\r\n\r\nexport {\r\n  formatCpf,\r\n  formatCpfSync,\r\n  formatCpfChange,\r\n  clearFormatCpf,\r\n  clearFormatCpfSync,\r\n  isValidCpf,\r\n  isValidCpfSync,\r\n};\r\n","const getNavegator = () => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      const listNavigator = [\r\n        \"safari\",\r\n        \"chrome\",\r\n        \"edg\",\r\n        \"opera\",\r\n        \"msie\",\r\n        \"firefox\",\r\n      ];\r\n      const infoNavegator = navigator.userAgent.toLowerCase();\r\n      const foundNavigator = listNavigator.find((navigator) =>\r\n        infoNavegator.includes(navigator)\r\n      );\r\n\r\n      resolve(\r\n        foundNavigator\r\n          ? `${\r\n              foundNavigator.charAt(0).toUpperCase() + foundNavigator.slice(1)\r\n            } en ${\r\n              navigator.userAgent.split(\" \")[1].substring(1) === \"Linux;\"\r\n                ? \"Android\"\r\n                : navigator.userAgent.split(\" \")[1].substring(1)\r\n            }`\r\n          : undefined\r\n      );\r\n    } catch (err) {\r\n      reject(new Error(\"Error in function\"));\r\n    }\r\n  });\r\n};\r\n\r\nconst getNavegatorSync = () => {\r\n  try {\r\n    const listNavigator = [\r\n      \"safari\",\r\n      \"chrome\",\r\n      \"edg\",\r\n      \"opera\",\r\n      \"msie\",\r\n      \"firefox\",\r\n    ];\r\n    const infoNavegator = navigator.userAgent.toLowerCase();\r\n    const foundNavigator = listNavigator.find((navigator) =>\r\n      infoNavegator.includes(navigator)\r\n    );\r\n\r\n    return foundNavigator\r\n      ? `${\r\n          foundNavigator.charAt(0).toUpperCase() + foundNavigator.slice(1)\r\n        } en ${\r\n          navigator.userAgent.split(\" \")[1].substring(1) === \"Linux;\"\r\n            ? \"Android\"\r\n            : navigator.userAgent.split(\" \")[1].substring(1)\r\n        }`\r\n      : undefined;\r\n  } catch (err) {\r\n    throw new Error(\"Error in getNavegator: \" + err);\r\n  }\r\n};\r\n\r\nexport { getNavegator, getNavegatorSync };\r\n"],"names":["formatCpf","cpf","Promise","resolve","reject","toString","replace","slice","err","Error","callback","newCPF","formatCpfChange","event","target","value","match","p1","p2","p3","p4","formattedCPF","clearCpfFormat","clearFormatCpf","console","error","clearFormatCpfSync","data","test","isValidCpfSync","valid","getNavegator","listNavigator","infoNavegator","navigator","userAgent","toLowerCase","foundNavigator","find","includes","charAt","toUpperCase","split","substring","undefined","getNavegatorSync"],"mappings":"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"}
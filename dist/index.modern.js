const e=(e,t)=>{if(!(e=(e=e.toString()).replace(/[^\d]/g,""))){console.error("Dato invalido de {CPF}");try{return t("")}catch(e){return""}}let r;r=e.length<=6?e.replace(/(\d{3})(\d{1,3})/g,"$1.$2"):e.length<=9?e.replace(/(\d{3})(\d{3})(\d{1,3})/g,"$1.$2.$3"):e.replace(/(\d{3})(\d{3})(\d{3})(\d{1,2})/g,"$1.$2.$3-$4");try{t(r.slice(0,14))}catch(e){return r.slice(0,14)}},t=(e,t)=>{if("change"!==e.type)return console.error("El evento debe ser tipo {change}"),"";let r,l=e.target.value.toString();if(l=l.replace(/[^\d]/g,""),!l){console.error("Dato invalido de {PHONE}"),e.target.value="";try{return t(e)}catch(e){return""}}r=l.length<=6?l.replace(/(\d{3})(\d{1,3})/g,"$1.$2"):l.length<=9?l.replace(/(\d{3})(\d{3})(\d{1,3})/g,"$1.$2.$3"):l.replace(/(\d{3})(\d{3})(\d{3})(\d{1,2})/g,"$1.$2.$3-$4");try{e.target.value=r.slice(0,14),t(e)}catch(e){return r.slice(0,14)}},r=(e,t)=>{let r=e.toString();if(!r){console.error("Dato invalido de {CPF}");try{return t("")}catch(e){return""}}r=r.replace(/[.-]/g,"");try{t(r.slice(0,14))}catch(e){return r.slice(0,14)}},l=e=>{let t=e.toString();return/^\d{3}\.\d{3}\.\d{3}-\d{2}$/.test(t)},a=(e,t)=>{if(!(e=e.replace(/[^\d]/g,""))){console.error("Dato invalido de PHONE");try{return t("")}catch(e){return""}}e&&!e.startsWith("55")&&e.length>=2&&(e="55"+e);let r=e.toString();e&&!r.startsWith("55")&&2===r.length&&(r="55"+r),r=r.replace(/[^\d]/g,"");var l=r.replace(/\D/g,"").match(/(\d{0,2})(\d{0,5})(\d{0,4})/);let a=l[2]?"("+l[1]+") "+l[2]+(l[3]?"-"+l[3]:""):l[1];try{t(a)}catch(e){return a}},c=(e,t)=>{if("change"!==e.type)return console.error("El evento debe ser tipo {change}"),"";let r=e.target.value.toString();if(r=r.replace(/[^\d]/g,""),!r){console.error("Dato invalido de {PHONE}"),e.target.value="";try{return t(e)}catch(e){return""}}r&&!r.startsWith("55")&&r.length>=2&&(r="55"+r);let l=r;r&&!l.startsWith("55")&&2===l.length&&(l="55"+l),l=l.replace(/[^\d]/g,"");var a=l.replace(/\D/g,"").match(/(\d{0,2})(\d{0,5})(\d{0,4})/);let c=a[2]?"("+a[1]+") "+a[2]+(a[3]?"-"+a[3]:""):a[1];e.target.value=c;try{t(e)}catch(e){return c}},n=(e,t)=>{let r=e.toString();if(!r){console.error("Dato invalido de {PHONE}");try{return t("")}catch(e){return""}}r=r.replace(/\s+/g,"").replace(/[()-]/g,"");try{t(r.slice(0,15))}catch(e){return r.slice(0,15)}},d=e=>{let t=e.toString();return/^\(\d{2}\)\s\d{5}-\d{4}$/.test(t)};export{r as clearFormatCpf,n as clearFormatPhone,e as formatCpf,t as formatCpfChange,a as formatPhone,c as formatPhoneChange,l as isValidCpf,d as isValidPhone};
//# sourceMappingURL=index.modern.js.map
